{"version":3,"sources":["redux/actions/items.js","components/MyTable.js","components/isLoading.js","components/CancelCross.js","App.js","registerServiceWorker.js","redux/reducer/items.js","redux/reducer/index.js","index.js"],"names":["itemFetchMovies","page","arguments","length","undefined","method","query_value","dispatch","console","log","toString","fetch","then","response","json","data","movies","currentCount","counter","i","results","image_url","poster_path","push","key","number","poster","react_default","a","createElement","className","src","alt","title","original_title","year","Date","parse","release_date","toDateString","description","overview","curr_method","curr_query","split","type","payload","payload_method","payload_query","sel","connect","state","query","fetchMovie","props","width","onClick","ref","node","onChange","value","name","placeholder","event","performSearch","target","IsLoading","height","trend_page_counter","search_page_counter","top_rated_page_counter","upcoming_page_counter","now_playing_page_counter","prev_query","App","handleClickPlus","_this","items","handleClickMin","this","list","components_CancelCross","isLoading","components_MyTable","map","item","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initalState","combineReducers","action","Object","objectSpread","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41b2771d.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nexport function itemFetchMovies(page = 1, method = 'movie/popular', query_value='') {\r\n    return function (dispatch) {\r\n        console.log('https://api.themoviedb.org/3/' + method + '?api_key=56d793d6cea47e6ab2101f3386c7b8b6&language=en-US' + query_value + '&page=' + page.toString());\r\n         return fetch('https://api.themoviedb.org/3/' + method + '?api_key=56d793d6cea47e6ab2101f3386c7b8b6&language=en-US' + query_value + '&page=' + page.toString(), {method: 'GET'})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let movies = [];\r\n\r\n                let currentCount = 1;\r\n                function makeCounter() {\r\n                     return function() {\r\n                        return currentCount++;\r\n                    };\r\n                }\r\n\r\n                let counter = makeCounter();\r\n                for (let i = 0; i < data.results.length; i++) {\r\n                    let image_url = \"https://image.tmdb.org/t/p/w500\" + data.results[i].poster_path;\r\n                    movies.push({\r\n                        key: {i},\r\n                        number: counter(),\r\n                        poster: <img\r\n                            className=\"elem_poster\"\r\n                            src={image_url}\r\n                            alt=\"new\"\r\n                        />,\r\n                        title: data.results[i].original_title,\r\n                        year: new Date(Date.parse(data.results[i].release_date)).toDateString(),\r\n                        description: data.results[i].overview\r\n                    })\r\n                }\r\n                console.log('fetch data here');\r\n                console.log(movies);\r\n                let curr_method = method;\r\n                let curr_query = query_value.split('=')[1];\r\n                    dispatch(\r\n                        {\r\n                            type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n                            payload: movies,\r\n                            payload_method: curr_method,\r\n                            payload_query: curr_query,\r\n                        }\r\n                    );\r\n            });\r\n    }\r\n}\r\n","//TODO: HOME and cancel buttons doest make form back to \"popular\" value\r\n\r\nimport React from 'react';\r\nimport \"../static/MyTable.css\"\r\nimport {itemFetchMovies} from \"../redux/actions/items\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet sel = \"popular\";\r\n\r\n const MyTable = (props) => {\r\n\r\n    const performSearch = (value) => {\r\n        if (value !== '') {\r\n            let query = '&query=' + value.toString();\r\n            props.fetchMovie(1, 'search/movie', query);\r\n        } else {\r\n            props.fetchMovie(1);\r\n        }\r\n    };\r\n\r\n    const searchChangeHandler = (event) => {\r\n        const searchTerm = event.target.value;\r\n        performSearch(searchTerm)\r\n    };\r\n\r\n    const handleMenu = () => {\r\n        props.fetchMovie(1);\r\n    };\r\n\r\n    const onSelectChange = () => {\r\n        console.log(sel.value);\r\n        switch (sel.value){\r\n            case \"popular\": {\r\n                props.fetchMovie(1);\r\n                break\r\n            }\r\n            case \"top_rated\": {\r\n                props.fetchMovie(1, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"upcoming\": {\r\n                props.fetchMovie(1, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"now_playing\": {\r\n                props.fetchMovie(1, \"movie/now_playing\");\r\n                break\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n        return (\r\n            <tr className=\"header\">\r\n                <th>\r\n                    <h1 className=\"header-name\">\r\n                        Movie list\r\n                    </h1>\r\n                </th>\r\n                <th width=\"40\"/>\r\n                <th>\r\n                    <h3 className=\"header-home\" onClick={handleMenu}>\r\n                        HOME\r\n                    </h3>\r\n                </th>\r\n                <th width=\"60\"/>\r\n                <th>\r\n                    <select ref={node => {sel = node}}\r\n                            onChange={onSelectChange}\r\n                            className=\"select-form\" >\r\n                        <option value=\"popular\">Popular</option>\r\n                        <option value=\"top_rated\">Top Rated</option>\r\n                        <option value=\"upcoming\">Upcoming</option>\r\n                        <option value=\"now_playing\">Now Playing</option>\r\n                    </select>\r\n                </th>\r\n                <th width=\"1150\"/>\r\n                <th>\r\n                    <input className=\"header-input\" type=\"text\" name=\"txt\" placeholder=\"Enter search term\"\r\n                           onChange={searchChangeHandler}/>\r\n                </th>\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    method: state.method,\r\n    query: state.query,\r\n    state: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value) => dispatch(itemFetchMovies(page, method, query_value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTable)","import React from 'react';\r\nimport \"../static/isError.css\"\r\n\r\n\r\nlet url = \"https://ui-ex.com/images/transparent-gif-loading-1.gif\";\r\n\r\n\r\nconst IsLoading = () => {\r\n    return (\r\n        <div className=\"no-data-container\">\r\n            <img\r\n                src={url}\r\n                alt=\"Sorry, here is an error\"\r\n                width=\"128\"\r\n                height=\"128\"\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default IsLoading;","import React from \"react\";\r\n\r\nimport \"../static/CancelCross.css\"\r\nimport {itemFetchMovies} from \"../redux/actions/items\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CancelCross = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.fetchMovie(1);\r\n    };\r\n\r\n    return(\r\n        <p onClick={handleClose} className=\"close\"/>\r\n        )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    method: state.method,\r\n    query: state.query,\r\n    state: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value) => dispatch(itemFetchMovies(page, method, query_value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CancelCross)\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { PropTypes }  from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport MyTable from \"./components/MyTable\"\r\nimport IsLoading from \"./components/isLoading\"\r\nimport CancelCross from \"./components/CancelCross\"\r\nimport { itemFetchMovies } from './redux/actions/items';\r\n\r\nimport \"./static/App.css\"\r\n\r\nlet  trend_page_counter = 1;\r\nlet  search_page_counter = 1;\r\nlet  top_rated_page_counter = 1;\r\nlet  upcoming_page_counter = 1;\r\nlet now_playing_page_counter = 1;\r\nlet  prev_query = \"\";\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMovie()\r\n    }\r\n\r\n\r\n\r\n    handleClickPlus = () => {\r\n        switch (this.props.state.items.method) {\r\n            case \"movie/popular\": {\r\n                trend_page_counter++;\r\n                this.props.fetchMovie(trend_page_counter);\r\n                break\r\n            }\r\n            case \"search/movie\": {\r\n                if (prev_query !== this.props.state.items.query.toString()) {\r\n                    search_page_counter = 1\r\n                }\r\n                search_page_counter++;\r\n                let query = '&query=' + this.props.state.items.query.toString();\r\n                this.props.fetchMovie(search_page_counter, 'search/movie', query);\r\n                prev_query = this.props.state.items.query.toString();\r\n                break\r\n            }\r\n            case \"movie/top_rated\": {\r\n                top_rated_page_counter++;\r\n                this.props.fetchMovie(top_rated_page_counter, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"movie/upcoming\": {\r\n                upcoming_page_counter++;\r\n                this.props.fetchMovie(upcoming_page_counter, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"movie/now_playing\": {\r\n                now_playing_page_counter++;\r\n                this.props.fetchMovie(now_playing_page_counter, \"movie/now_playing\");\r\n                break\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClickMin = () => {\r\n        switch (this.props.state.items.method) {\r\n            case \"movie/popular\": {\r\n                if (trend_page_counter >= 2) {\r\n                    trend_page_counter--\r\n                }\r\n                this.props.fetchMovie(trend_page_counter);\r\n                break\r\n            }\r\n            case \"search/movie\": {\r\n                if(search_page_counter >= 2) {search_page_counter--}\r\n                this.props.fetchMovie(search_page_counter);\r\n                let query = '&query=' + this.props.state.items.query.toString();\r\n                this.props.fetchMovie(search_page_counter, 'search/movie', query);\r\n                prev_query = this.props.state.items.query.toString();\r\n                break\r\n            }\r\n            case \"movie/top_rated\": {\r\n                if (top_rated_page_counter >= 2) {\r\n                    top_rated_page_counter--\r\n                }\r\n                this.props.fetchMovie(top_rated_page_counter, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"movie/upcoming\": {\r\n                if (upcoming_page_counter >= 2) {\r\n                    upcoming_page_counter--\r\n                }\r\n                this.props.fetchMovie(upcoming_page_counter, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"movie/now_playing\": {\r\n                if (now_playing_page_counter >= 2) {\r\n                    now_playing_page_counter--\r\n                }\r\n                this.props.fetchMovie(now_playing_page_counter, \"movie/now_playing\");\r\n                break\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.props.state.items.list.length === 0) {\r\n            return (\r\n                <div>\r\n                    <CancelCross/>\r\n                    <IsLoading/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <MyTable/>\r\n                <div className=\"arrows\">\r\n                    <span onClick={this.handleClickMin} className=\"arrow arrow-left\"/>\r\n                    <span onClick={this.handleClickPlus} className=\"arrow arrow-right\"/>\r\n                </div>\r\n\r\n                <table className=\"data_table\">\r\n                    <tbody>\r\n                    {this.props.state.items.list.map(function (item) {\r\n                        return (\r\n                            <tr className=\"rt-table\">\r\n\r\n                                <td className=\"row_poster\">\r\n                                    {item.poster}\r\n                                </td>\r\n\r\n                                <td className=\"row_title\">\r\n                                    <h2 className=\"elem_title\">\r\n                                        {item.title}\r\n                                    </h2>\r\n                                </td>\r\n\r\n                                <td className=\"row_year\">\r\n                                    <h3 className=\"elem_year\">\r\n                                        {item.year}\r\n                                    </h3>\r\n                                </td>\r\n\r\n                                <td className=\"row_description\">\r\n                                    <p className=\"elem_description\">\r\n                                        {item.description}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    fetchMovie: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n        // list: state.list,\r\n        method: state.method,\r\n        query: state.query,\r\n        state: state,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value) => dispatch(itemFetchMovies(page, method, query_value))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","const initalState = {\r\n    list: [],\r\n    method: \"movie/popular\",\r\n    query: '',\r\n};\r\n\r\n\r\nexport function items(state = initalState, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_FETCH_DATA_SUCCESS':\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                method: action.payload_method,\r\n                query: action.payload_query,\r\n            };\r\n\r\n        default:\r\n            return state ;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { items } from './items';\r\n\r\nexport default combineReducers({\r\n    items\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer  from \"./redux/reducer/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\"\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}