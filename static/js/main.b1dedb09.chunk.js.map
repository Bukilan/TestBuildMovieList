{"version":3,"sources":["redux/actions/items.js","components/MyTable.js","components/isLoading.js","components/CancelCross.js","App.js","registerServiceWorker.js","redux/reducer/items.js","redux/reducer/index.js","index.js"],"names":["itemFetchMovies","page","arguments","length","undefined","method","query_value","year","dispatch","console","log","toString","fetch","then","response","json","data","movies","currentCount","counter","i","results","image_url","poster_path","push","key","number","poster","react_default","a","createElement","className","src","alt","title","original_title","Date","parse","release_date","toDateString","description","overview","search_year","split","curr_method","curr_query","type","payload","payload_method","payload_query","payload_year","sel","genre","genreCustomStyles","control","base","state","Object","objectSpread","background","borderRadius","isFocused","borderColor","boxShadow","&:hover","menu","marginTop","menuList","padding","option","textAlign","genre_options","value","label","selectCustomStyles","color","singleValue","fontSize","select_options","connect","fetchMovie","props","width","onClick","window","location","reload","react_select_esm","ref","node","closeMenuOnSelect","components","makeAnimated","isMulti","options","styles","str","forEach","item","slice","alert","autoFocus","defaultValue","name","placeholder","onChange","event","yearSearch","target","query","performSearch","IsLoading","height","trend_page_counter","search_page_counter","top_rated_page_counter","upcoming_page_counter","now_playing_page_counter","year_page_counter","genre_page_counter","prev_query","App","handleClickPlus","_this","items","handleClickMin","this","list","components_CancelCross","isLoading","components_MyTable","map","React","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initalState","combineReducers","action","payload_genre","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b1dedb09.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nexport function itemFetchMovies(page = 1, method = 'movie/popular', query_value='', year='') {\r\n    return function (dispatch) {\r\n        console.log('https://api.themoviedb.org/3/' + method + '?api_key=56d793d6cea47e6ab2101f3386c7b8b6&language=en-US' + query_value + '&page=' + page.toString() + year);\r\n         return fetch('https://api.themoviedb.org/3/' + method + '?api_key=56d793d6cea47e6ab2101f3386c7b8b6&language=en-US' + query_value + '&page=' + page.toString() + year, {method: 'GET'})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let movies = [];\r\n\r\n                let currentCount = 1;\r\n                function makeCounter() {\r\n                     return function() {\r\n                        return currentCount++;\r\n                    };\r\n                }\r\n\r\n                let counter = makeCounter();\r\n                for (let i = 0; i < data.results.length; i++) {\r\n                    let image_url = \"https://image.tmdb.org/t/p/w500\" + data.results[i].poster_path;\r\n                    movies.push({\r\n                        key: {i},\r\n                        number: counter(),\r\n                        poster: <img\r\n                            className=\"elem_poster\"\r\n                            src={image_url}\r\n                            alt=\"new\"\r\n                        />,\r\n                        title: data.results[i].original_title,\r\n                        year: new Date(Date.parse(data.results[i].release_date)).toDateString(),\r\n                        description: data.results[i].overview\r\n                    })\r\n                }\r\n                console.log('fetch data here');\r\n                console.log(movies);\r\n                let search_year = '';\r\n                if ( year.split('=')[0] === \"&primary_release_year\"){\r\n                    search_year = year.split('=')[1];\r\n                    console.log(search_year[1])\r\n                }\r\n                if ( year.split('=')[0] === \"&with_genres\"){\r\n                    search_year = year.split('=')[1];\r\n                    console.log(search_year)\r\n                }\r\n                let curr_method = method;\r\n                let curr_query = query_value.split('=')[1];\r\n                    dispatch(\r\n                        {\r\n                            type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n                            payload: movies,\r\n                            payload_method: curr_method,\r\n                            payload_query: curr_query,\r\n                            payload_year: search_year,\r\n                        }\r\n                    );\r\n            });\r\n    }\r\n}\r\n","//TODO: HOME and cancel buttons doest make form back to \"popular\" value\r\n\r\nimport React from 'react';\r\nimport \"../static/MyTable.css\"\r\nimport {itemFetchMovies} from \"../redux/actions/items\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/lib/animated';\r\n\r\nlet sel = '';\r\nlet genre = '';\r\n\r\nconst genreCustomStyles = {\r\n    control: (base, state) => ({\r\n        ...base,\r\n        background: \"#000\",\r\n        borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n        borderColor: \"white\",\r\n        boxShadow: state.isFocused ? null : null,\r\n        \"&:hover\": {\r\n            borderColor: \"cyan\",\r\n        }\r\n    }),\r\n    menu: base => ({\r\n        ...base,\r\n        borderRadius: 0,\r\n        marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n        ...base,\r\n        padding: 0\r\n    }),\r\n    option: base => ({\r\n        background: \"#000\",\r\n        textAlign: \"left\",\r\n        padding: \"10px\",\r\n    })\r\n};\r\n\r\nconst genre_options = [\r\n    { value: '28', label: 'Action' },\r\n    { value: '12', label: 'Adventure' },\r\n    { value: '16', label: 'Animation' },\r\n    { value: '35', label: 'Comedy' },\r\n    { value: '80', label: 'Crime' },\r\n    { value: '99', label: 'Documentary' },\r\n    { value: '18', label: 'Drama' },\r\n    { value: '10751', label: 'Family' },\r\n    { value: '14', label: 'Fantasy' },\r\n    { value: '36', label: 'History' },\r\n    { value: '27', label: 'Horror' },\r\n    { value: '10402', label: 'Music' },\r\n    { value: '9648', label: 'Mystery' },\r\n    { value: '10749', label: 'Romance' },\r\n    { value: '878', label: 'Science Fiction' },\r\n    { value: '10770', label: 'TV Movie' },\r\n    { value: '53', label: 'Thriller' },\r\n    { value: '10752', label: 'War' },\r\n    { value: '37', label: 'Western' },\r\n];\r\n\r\nconst selectCustomStyles = {\r\n    control: (base, state) => ({\r\n        ...base,\r\n        background: \"#000\",\r\n        borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n        borderColor: \"white\",\r\n        boxShadow: state.isFocused ? null : null,\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            borderColor: \"cyan\",\r\n        }\r\n    }),\r\n\r\n    menu: base => ({\r\n        ...base,\r\n        borderRadius: 0,\r\n        marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n        ...base,\r\n        padding: 0\r\n    }),\r\n    option: base => ({\r\n        background: \"#000\",\r\n        color: \"white\",\r\n        textAlign: \"left\",\r\n        padding: \"10px\",\r\n    }),\r\n    singleValue: base => ({\r\n        fontSize: 14,\r\n        color: \"white\"\r\n    }),\r\n};\r\n\r\nconst select_options = [\r\n    { value: 'popular', label: 'Popular' },\r\n    { value: 'top_rated', label: 'Top Rated' },\r\n    { value: 'upcoming', label: 'Upcoming' },\r\n    { value: 'now_playing', label: 'Now Playing' },\r\n];\r\n\r\n\r\n const MyTable = (props) => {\r\n\r\n    const performSearch = (value) => {\r\n        if (value !== '') {\r\n            let query = '&query=' + value.toString();\r\n            props.fetchMovie(1, 'search/movie', query);\r\n        } else {\r\n            props.fetchMovie(1);\r\n        }\r\n    };\r\n\r\n    const searchChangeHandler = (event) => {\r\n        const searchTerm = event.target.value;\r\n        performSearch(searchTerm)\r\n    };\r\n\r\n     const yearSearch = (value) => {\r\n        if (value.length === 4 ){\r\n            let year = \"&primary_release_year=\" + value.toString();\r\n            props.fetchMovie(1, 'discover/movie', '&sort_by=popularity.desc&include_adult=false&include_video=false', year)\r\n        }\r\n     };\r\n\r\n     const yearChangeHandler = (event) => {\r\n         const yearTerm = event.target.value;\r\n         yearSearch(yearTerm)\r\n     };\r\n\r\n    const handleMenu = () => {\r\n        props.fetchMovie(1);\r\n        window.location.reload();\r\n    };\r\n\r\n    const onSelectChange = () => {\r\n        switch (sel.state.value.value){\r\n            case \"popular\": {\r\n                props.fetchMovie(1);\r\n                break\r\n            }\r\n            case \"top_rated\": {\r\n                props.fetchMovie(1, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"upcoming\": {\r\n                props.fetchMovie(1, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"now_playing\": {\r\n                props.fetchMovie(1, \"movie/now_playing\");\r\n                break\r\n            }\r\n        }\r\n    };\r\n\r\n    const onGenreChange = () => {\r\n        if ( genre.state.value !== null){\r\n            if (  genre.state.value.length !== 0){\r\n                let str;\r\n                genre.state.value.forEach((item) => {str = str +item.value + \"%2C\"});\r\n                str = str.split(\"undefined\")[1].slice(0,-3);\r\n                str = \"&with_genres=\" + str;\r\n                console.log(str);\r\n                props.fetchMovie(1, 'discover/movie', '&sort_by=popularity.desc&include_adult=false&include_video=false', str)\r\n            } else { alert(\"please, choose genre\")}\r\n        } else { alert(\"please, choose genre\")}\r\n\r\n\r\n    };\r\n\r\n\r\n        return (\r\n            <tr className=\"header\">\r\n                <th>\r\n                    <h1 className=\"header-name\">\r\n                        Movie list\r\n                    </h1>\r\n                </th>\r\n                <th width=\"40\"/>\r\n                <th>\r\n                    <h3 className=\"header-home\" onClick={handleMenu}>\r\n                        HOME\r\n                    </h3>\r\n                </th>\r\n                <th width=\"100\"/>\r\n                <th>\r\n                    <Select\r\n                        ref={node => {genre = node}}\r\n                        className=\"genre-form\"\r\n                        closeMenuOnSelect={false}\r\n                        components={makeAnimated()}\r\n                        isMulti={true}\r\n                        options={genre_options}\r\n                        styles={genreCustomStyles}\r\n                    />\r\n                </th>\r\n                <th width=\"10\"/>\r\n                <th>\r\n                    <button onClick={onGenreChange} className=\"genre-button\">Submit</button>\r\n                </th>\r\n                <th width=\"120\"/>\r\n                <th>\r\n                    <Select\r\n                        ref={node => {sel = node}}\r\n                        className=\"sel-form\"\r\n                        closeMenuOnSelect={true}\r\n                        autoFocus = {true}\r\n                        components={makeAnimated()}\r\n                        options={select_options}\r\n                        styles={selectCustomStyles}\r\n                        defaultValue={select_options[0]}\r\n                    />\r\n                </th>\r\n                <th width=\"10\"/>\r\n                <th>\r\n                    <button onClick={onSelectChange} className=\"select-button\">Submit</button>\r\n                </th>\r\n                <th width=\"90\"/>\r\n                <th>\r\n                    <input className=\"header-input-year\" type=\"text\" name=\"txt\" placeholder=\"Enter search year\"\r\n                           onChange={yearChangeHandler}/>\r\n                </th>\r\n                <th width=\"150\"/>\r\n                <th>\r\n                    <input className=\"header-input\" type=\"text\" name=\"txt\" placeholder=\"Enter search term\"\r\n                           onChange={searchChangeHandler}/>\r\n                </th>\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value, year) => dispatch(itemFetchMovies(page, method, query_value, year))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTable)","import React from 'react';\r\nimport \"../static/isError.css\"\r\n\r\n\r\nlet url = \"https://ui-ex.com/images/transparent-gif-loading-1.gif\";\r\n\r\n\r\nconst IsLoading = () => {\r\n    return (\r\n        <div className=\"no-data-container\">\r\n            <img\r\n                src={url}\r\n                alt=\"Sorry, here is an error\"\r\n                width=\"128\"\r\n                height=\"128\"\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default IsLoading;","import React from \"react\";\r\n\r\nimport \"../static/CancelCross.css\"\r\nimport {itemFetchMovies} from \"../redux/actions/items\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CancelCross = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.fetchMovie(1);\r\n    };\r\n\r\n    return(\r\n        <p onClick={handleClose} className=\"close\"/>\r\n        )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    method: state.method,\r\n    query: state.query,\r\n    state: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value) => dispatch(itemFetchMovies(page, method, query_value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CancelCross)\r\n\r\n\r\n\r\n\r\n\r\n","//TODO: implement first and last page in pagination\r\n//TODO: implement current page in pagination\r\n\r\nimport React from \"react\";\r\nimport { PropTypes }  from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport MyTable from \"./components/MyTable\"\r\nimport IsLoading from \"./components/isLoading\"\r\nimport CancelCross from \"./components/CancelCross\"\r\nimport { itemFetchMovies } from './redux/actions/items';\r\n\r\nimport \"./static/App.css\"\r\n\r\nlet  trend_page_counter = 1;\r\nlet  search_page_counter = 1;\r\nlet  top_rated_page_counter = 1;\r\nlet  upcoming_page_counter = 1;\r\nlet  now_playing_page_counter = 1;\r\nlet  year_page_counter = 1;\r\nlet  genre_page_counter = 1;\r\nlet  prev_query = \"\";\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMovie()\r\n    }\r\n\r\n\r\n\r\n    handleClickPlus = () => {\r\n        switch (this.props.state.items.method) {\r\n            case \"movie/popular\": {\r\n                trend_page_counter++;\r\n                this.props.fetchMovie(trend_page_counter);\r\n                break\r\n            }\r\n            case \"search/movie\": {\r\n                if (prev_query !== this.props.state.items.query.toString()) {\r\n                    search_page_counter = 1\r\n                }\r\n                search_page_counter++;\r\n                let query = '&query=' + this.props.state.items.query.toString();\r\n                this.props.fetchMovie(search_page_counter, 'search/movie', query);\r\n                prev_query = this.props.state.items.query.toString();\r\n                break\r\n            }\r\n            case \"movie/top_rated\": {\r\n                top_rated_page_counter++;\r\n                this.props.fetchMovie(top_rated_page_counter, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"movie/upcoming\": {\r\n                upcoming_page_counter++;\r\n                this.props.fetchMovie(upcoming_page_counter, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"movie/now_playing\": {\r\n                now_playing_page_counter++;\r\n                this.props.fetchMovie(now_playing_page_counter, \"movie/now_playing\");\r\n                break\r\n            }\r\n            case \"discover/movie\": {\r\n                if (this.props.state.items.year.length === 4){\r\n                    year_page_counter++;\r\n                    let year = \"&primary_release_year=\" + this.props.state.items.year.toString();\r\n                    this.props.fetchMovie(year_page_counter, \"discover/movie\", '&sort_by=popularity.desc&include_adult=false&include_video=false', year);\r\n                    break\r\n                } else {\r\n                    genre_page_counter++;\r\n                    let genre = \"&with_genres=\" + this.props.state.items.year;\r\n                    console.log(genre);\r\n                    this.props.fetchMovie(genre_page_counter, \"discover/movie\", '&sort_by=popularity.desc&include_adult=false&include_video=false', genre);\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClickMin = () => {\r\n        switch (this.props.state.items.method) {\r\n            case \"movie/popular\": {\r\n                if (trend_page_counter >= 2) {\r\n                    trend_page_counter--\r\n                }\r\n                this.props.fetchMovie(trend_page_counter);\r\n                break\r\n            }\r\n            case \"search/movie\": {\r\n                if (search_page_counter >= 2) {\r\n                    search_page_counter--\r\n                }\r\n                this.props.fetchMovie(search_page_counter);\r\n                let query = '&query=' + this.props.state.items.query.toString();\r\n                this.props.fetchMovie(search_page_counter, 'search/movie', query);\r\n                prev_query = this.props.state.items.query.toString();\r\n                break\r\n            }\r\n            case \"movie/top_rated\": {\r\n                if (top_rated_page_counter >= 2) {\r\n                    top_rated_page_counter--\r\n                }\r\n                this.props.fetchMovie(top_rated_page_counter, \"movie/top_rated\");\r\n                break\r\n            }\r\n            case \"movie/upcoming\": {\r\n                if (upcoming_page_counter >= 2) {\r\n                    upcoming_page_counter--\r\n                }\r\n                this.props.fetchMovie(upcoming_page_counter, \"movie/upcoming\");\r\n                break\r\n            }\r\n            case \"movie/now_playing\": {\r\n                if (now_playing_page_counter >= 2) {\r\n                    now_playing_page_counter--\r\n                }\r\n                this.props.fetchMovie(now_playing_page_counter, \"movie/now_playing\");\r\n                break\r\n            }\r\n            case \"discover/movie\": {\r\n                if (this.props.state.items.year.length === 4) {\r\n                    if (year_page_counter >= 2) {\r\n                        year_page_counter--\r\n                    }\r\n                    let year = \"&primary_release_year=\" + this.props.state.items.year.toString();\r\n                    this.props.fetchMovie(year_page_counter, \"discover/movie\", '&sort_by=popularity.desc&include_adult=false&include_video=false', year);\r\n                    break\r\n                } else {\r\n                    if (genre_page_counter >= 2) {\r\n                        genre_page_counter--\r\n                    }\r\n                    let genre = \"&with_genres=\" + this.props.state.items.year.toString();\r\n                    this.props.fetchMovie(genre_page_counter, \"discover/movie\", '&sort_by=popularity.desc&include_adult=false&include_video=false', genre);\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.props.state.items.list.length === 0) {\r\n            return (\r\n                <div>\r\n                    <CancelCross/>\r\n                    <IsLoading/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <MyTable/>\r\n                <div className=\"arrows\">\r\n                    <span onClick={this.handleClickMin} className=\"arrow arrow-left\"/>\r\n                    <span onClick={this.handleClickPlus} className=\"arrow arrow-right\"/>\r\n                </div>\r\n\r\n                <table className=\"data_table\">\r\n                    <tbody>\r\n                    {this.props.state.items.list.map(function (item) {\r\n                        return (\r\n                            <tr className=\"rt-table\">\r\n\r\n                                <td className=\"row_poster\">\r\n                                    {item.poster}\r\n                                </td>\r\n\r\n                                <td className=\"row_title\">\r\n                                    <h2 className=\"elem_title\">\r\n                                        {item.title}\r\n                                    </h2>\r\n                                </td>\r\n\r\n                                <td className=\"row_year\">\r\n                                    <h3 className=\"elem_year\">\r\n                                        {item.year}\r\n                                    </h3>\r\n                                </td>\r\n\r\n                                <td className=\"row_description\">\r\n                                    <p className=\"elem_description\">\r\n                                        {item.description}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    fetchMovie: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n        method: state.method,\r\n        query: state.query,\r\n        year: state.year,\r\n        state: state,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovie: (page, method, query_value, year) => dispatch(itemFetchMovies(page, method, query_value, year))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","const initalState = {\r\n    list: [],\r\n    method: \"movie/popular\",\r\n    query: '',\r\n    year: '',\r\n    genre: '',\r\n};\r\n\r\n\r\nexport function items(state = initalState, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_FETCH_DATA_SUCCESS':\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                method: action.payload_method,\r\n                query: action.payload_query,\r\n                year: action.payload_year,\r\n                genre: action.payload_genre,\r\n            };\r\n\r\n        default:\r\n            return state ;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { items } from './items';\r\n\r\nexport default combineReducers({\r\n    items\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer  from \"./redux/reducer/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\"\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}